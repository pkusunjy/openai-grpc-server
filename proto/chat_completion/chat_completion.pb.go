// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: chat_completion/chat_completion.proto

package chat_completion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid   uint64 `protobuf:"varint,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Uid     uint64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Stage   uint32 `protobuf:"varint,4,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_completion_chat_completion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_completion_chat_completion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_completion_chat_completion_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetLogid() uint64 {
	if x != nil {
		return x.Logid
	}
	return 0
}

func (x *ChatMessage) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetStage() uint32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

var File_chat_completion_chat_completion_proto protoreflect.FileDescriptor

var file_chat_completion_chat_completion_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x32,
	0xf4, 0x17, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x58,
	0x0a, 0x16, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x62, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x1a, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x18, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x1a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70,
	0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x32, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x5a, 0x0a, 0x18, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x32, 0x5f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59,
	0x0a, 0x17, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x32, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x1a, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x33, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x18, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x33, 0x5f, 0x65, 0x6e, 0x72,
	0x69, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x17, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x77, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x31, 0x5f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58,
	0x0a, 0x16, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x31, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x19, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x32, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x17, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x77,
	0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x32, 0x5f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x58, 0x0a, 0x16, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x32, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x1d, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x1a, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x19, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x1c, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x79,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x1f, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x1a, 0x74, 0x6f, 0x65,
	0x66, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x18, 0x74, 0x6f, 0x65, 0x66, 0x6c,
	0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f, 0x65, 0x6e, 0x72,
	0x69, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x17, 0x74, 0x6f, 0x65, 0x66, 0x6c, 0x5f, 0x73, 0x70, 0x65,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59,
	0x0a, 0x17, 0x74, 0x6f, 0x65, 0x66, 0x6c, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x31, 0x5f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x16, 0x74, 0x6f, 0x65,
	0x66, 0x6c, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x31, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x17, 0x74, 0x6f, 0x65, 0x66, 0x6c, 0x5f, 0x77, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x32, 0x5f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58,
	0x0a, 0x16, 0x74, 0x6f, 0x65, 0x66, 0x6c, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x32, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x17, 0x74, 0x6f, 0x65, 0x66,
	0x6c, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x33, 0x5f, 0x65, 0x6e, 0x72,
	0x69, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x19, 0x74, 0x6f, 0x65, 0x66, 0x6c, 0x5f, 0x77, 0x72, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x33, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4a, 0x0a, 0x08, 0x63, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x08,
	0x65, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x17, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x12, 0x53, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x75, 0x73, 0x75, 0x6e, 0x6a, 0x79, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_completion_chat_completion_proto_rawDescOnce sync.Once
	file_chat_completion_chat_completion_proto_rawDescData = file_chat_completion_chat_completion_proto_rawDesc
)

func file_chat_completion_chat_completion_proto_rawDescGZIP() []byte {
	file_chat_completion_chat_completion_proto_rawDescOnce.Do(func() {
		file_chat_completion_chat_completion_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_completion_chat_completion_proto_rawDescData)
	})
	return file_chat_completion_chat_completion_proto_rawDescData
}

var file_chat_completion_chat_completion_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chat_completion_chat_completion_proto_goTypes = []interface{}{
	(*ChatMessage)(nil), // 0: chat_completion.ChatMessage
}
var file_chat_completion_chat_completion_proto_depIdxs = []int32{
	0,  // 0: chat_completion.ChatService.ask:input_type -> chat_completion.ChatMessage
	0,  // 1: chat_completion.ChatService.chat:input_type -> chat_completion.ChatMessage
	0,  // 2: chat_completion.ChatService.write_article_by_title:input_type -> chat_completion.ChatMessage
	0,  // 3: chat_completion.ChatService.transcribe_judge:input_type -> chat_completion.ChatMessage
	0,  // 4: chat_completion.ChatService.ielts_speaking_p1_generate:input_type -> chat_completion.ChatMessage
	0,  // 5: chat_completion.ChatService.ielts_speaking_p1_enrich:input_type -> chat_completion.ChatMessage
	0,  // 6: chat_completion.ChatService.ielts_speaking_p2_generate:input_type -> chat_completion.ChatMessage
	0,  // 7: chat_completion.ChatService.ielts_speaking_p2_enrich:input_type -> chat_completion.ChatMessage
	0,  // 8: chat_completion.ChatService.ielts_speaking_p2_score:input_type -> chat_completion.ChatMessage
	0,  // 9: chat_completion.ChatService.ielts_speaking_p3_generate:input_type -> chat_completion.ChatMessage
	0,  // 10: chat_completion.ChatService.ielts_speaking_p3_enrich:input_type -> chat_completion.ChatMessage
	0,  // 11: chat_completion.ChatService.ielts_writing_t1_enrich:input_type -> chat_completion.ChatMessage
	0,  // 12: chat_completion.ChatService.ielts_writing_t1_score:input_type -> chat_completion.ChatMessage
	0,  // 13: chat_completion.ChatService.ielts_writing_t2_generate:input_type -> chat_completion.ChatMessage
	0,  // 14: chat_completion.ChatService.ielts_writing_t2_enrich:input_type -> chat_completion.ChatMessage
	0,  // 15: chat_completion.ChatService.ielts_writing_t2_score:input_type -> chat_completion.ChatMessage
	0,  // 16: chat_completion.ChatService.ielts_speaking_words_synonyms:input_type -> chat_completion.ChatMessage
	0,  // 17: chat_completion.ChatService.ielts_speaking_words_usage:input_type -> chat_completion.ChatMessage
	0,  // 18: chat_completion.ChatService.ielts_writing_words_theme:input_type -> chat_completion.ChatMessage
	0,  // 19: chat_completion.ChatService.ielts_writing_words_synonyms:input_type -> chat_completion.ChatMessage
	0,  // 20: chat_completion.ChatService.ielts_writing_words_combination:input_type -> chat_completion.ChatMessage
	0,  // 21: chat_completion.ChatService.toefl_speaking_p1_generate:input_type -> chat_completion.ChatMessage
	0,  // 22: chat_completion.ChatService.toefl_speaking_p1_enrich:input_type -> chat_completion.ChatMessage
	0,  // 23: chat_completion.ChatService.toefl_speaking_p1_score:input_type -> chat_completion.ChatMessage
	0,  // 24: chat_completion.ChatService.toefl_writing_p1_enrich:input_type -> chat_completion.ChatMessage
	0,  // 25: chat_completion.ChatService.toefl_writing_p1_score:input_type -> chat_completion.ChatMessage
	0,  // 26: chat_completion.ChatService.toefl_writing_p2_enrich:input_type -> chat_completion.ChatMessage
	0,  // 27: chat_completion.ChatService.toefl_writing_p2_score:input_type -> chat_completion.ChatMessage
	0,  // 28: chat_completion.ChatService.toefl_writing_p3_enrich:input_type -> chat_completion.ChatMessage
	0,  // 29: chat_completion.ChatService.toefl_writing_p3_generate:input_type -> chat_completion.ChatMessage
	0,  // 30: chat_completion.ChatService.cn_to_en:input_type -> chat_completion.ChatMessage
	0,  // 31: chat_completion.ChatService.en_to_cn:input_type -> chat_completion.ChatMessage
	0,  // 32: chat_completion.ChatService.ielts_speaking_exercise:input_type -> chat_completion.ChatMessage
	0,  // 33: chat_completion.ChatService.ielts_speaking_exam:input_type -> chat_completion.ChatMessage
	0,  // 34: chat_completion.ChatService.ask:output_type -> chat_completion.ChatMessage
	0,  // 35: chat_completion.ChatService.chat:output_type -> chat_completion.ChatMessage
	0,  // 36: chat_completion.ChatService.write_article_by_title:output_type -> chat_completion.ChatMessage
	0,  // 37: chat_completion.ChatService.transcribe_judge:output_type -> chat_completion.ChatMessage
	0,  // 38: chat_completion.ChatService.ielts_speaking_p1_generate:output_type -> chat_completion.ChatMessage
	0,  // 39: chat_completion.ChatService.ielts_speaking_p1_enrich:output_type -> chat_completion.ChatMessage
	0,  // 40: chat_completion.ChatService.ielts_speaking_p2_generate:output_type -> chat_completion.ChatMessage
	0,  // 41: chat_completion.ChatService.ielts_speaking_p2_enrich:output_type -> chat_completion.ChatMessage
	0,  // 42: chat_completion.ChatService.ielts_speaking_p2_score:output_type -> chat_completion.ChatMessage
	0,  // 43: chat_completion.ChatService.ielts_speaking_p3_generate:output_type -> chat_completion.ChatMessage
	0,  // 44: chat_completion.ChatService.ielts_speaking_p3_enrich:output_type -> chat_completion.ChatMessage
	0,  // 45: chat_completion.ChatService.ielts_writing_t1_enrich:output_type -> chat_completion.ChatMessage
	0,  // 46: chat_completion.ChatService.ielts_writing_t1_score:output_type -> chat_completion.ChatMessage
	0,  // 47: chat_completion.ChatService.ielts_writing_t2_generate:output_type -> chat_completion.ChatMessage
	0,  // 48: chat_completion.ChatService.ielts_writing_t2_enrich:output_type -> chat_completion.ChatMessage
	0,  // 49: chat_completion.ChatService.ielts_writing_t2_score:output_type -> chat_completion.ChatMessage
	0,  // 50: chat_completion.ChatService.ielts_speaking_words_synonyms:output_type -> chat_completion.ChatMessage
	0,  // 51: chat_completion.ChatService.ielts_speaking_words_usage:output_type -> chat_completion.ChatMessage
	0,  // 52: chat_completion.ChatService.ielts_writing_words_theme:output_type -> chat_completion.ChatMessage
	0,  // 53: chat_completion.ChatService.ielts_writing_words_synonyms:output_type -> chat_completion.ChatMessage
	0,  // 54: chat_completion.ChatService.ielts_writing_words_combination:output_type -> chat_completion.ChatMessage
	0,  // 55: chat_completion.ChatService.toefl_speaking_p1_generate:output_type -> chat_completion.ChatMessage
	0,  // 56: chat_completion.ChatService.toefl_speaking_p1_enrich:output_type -> chat_completion.ChatMessage
	0,  // 57: chat_completion.ChatService.toefl_speaking_p1_score:output_type -> chat_completion.ChatMessage
	0,  // 58: chat_completion.ChatService.toefl_writing_p1_enrich:output_type -> chat_completion.ChatMessage
	0,  // 59: chat_completion.ChatService.toefl_writing_p1_score:output_type -> chat_completion.ChatMessage
	0,  // 60: chat_completion.ChatService.toefl_writing_p2_enrich:output_type -> chat_completion.ChatMessage
	0,  // 61: chat_completion.ChatService.toefl_writing_p2_score:output_type -> chat_completion.ChatMessage
	0,  // 62: chat_completion.ChatService.toefl_writing_p3_enrich:output_type -> chat_completion.ChatMessage
	0,  // 63: chat_completion.ChatService.toefl_writing_p3_generate:output_type -> chat_completion.ChatMessage
	0,  // 64: chat_completion.ChatService.cn_to_en:output_type -> chat_completion.ChatMessage
	0,  // 65: chat_completion.ChatService.en_to_cn:output_type -> chat_completion.ChatMessage
	0,  // 66: chat_completion.ChatService.ielts_speaking_exercise:output_type -> chat_completion.ChatMessage
	0,  // 67: chat_completion.ChatService.ielts_speaking_exam:output_type -> chat_completion.ChatMessage
	34, // [34:68] is the sub-list for method output_type
	0,  // [0:34] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_chat_completion_chat_completion_proto_init() }
func file_chat_completion_chat_completion_proto_init() {
	if File_chat_completion_chat_completion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_completion_chat_completion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_completion_chat_completion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_completion_chat_completion_proto_goTypes,
		DependencyIndexes: file_chat_completion_chat_completion_proto_depIdxs,
		MessageInfos:      file_chat_completion_chat_completion_proto_msgTypes,
	}.Build()
	File_chat_completion_chat_completion_proto = out.File
	file_chat_completion_chat_completion_proto_rawDesc = nil
	file_chat_completion_chat_completion_proto_goTypes = nil
	file_chat_completion_chat_completion_proto_depIdxs = nil
}
